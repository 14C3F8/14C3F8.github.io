<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2023/01/04/My-first-article/"/>
      <url>/2023/01/04/My-first-article/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="这是第一篇文章"><a href="#这是第一篇文章" class="headerlink" title="这是第一篇文章"></a>这是第一篇文章</h2>]]></content>
      
      
      <categories>
          
          <category> 我的文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/04/hello-world/"/>
      <url>/2023/01/04/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }  :root {    --trans-light: rgba(255, 255, 255, 0.88);    --trans-dark: rgba(25, 25, 25, 0.88);    --border-style: 1px solid rgb(169, 169, 169);    --backdrop-filter: blur(5px) saturate(150%);  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border-radius: 25px;    border: var(--border-style);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border-radius: 18px;    border: var(--border-style);  }    /* 文章页、归档页、普通页面 */  div#post,  div#page,  div#archive {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border: var(--border-style);    border-radius: 20px;  }    /* 导航栏 */  #page-header.nav-fixed #nav {    background: rgba(211, 211, 211, 0.75);    backdrop-filter: var(--backdrop-filter);  }    [data-theme="dark"] #page-header.nav-fixed #nav {    background: rgba(0, 0, 0, 0.7) !important;  }    /* 夜间模式遮罩 */  [data-theme="dark"] #recent-posts > .recent-post-item,  [data-theme="dark"] #aside-content .card-widget,  [data-theme="dark"] div#post,  [data-theme="dark"] div#archive,  [data-theme="dark"] div#page {    background: var(--trans-dark);  }      /* 夜间模式页脚页头遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }    /* 阅读模式 */  .read-mode #aside-content .card-widget {    background: rgba(158, 204, 171, 0.5) !important;  }  .read-mode div#post {    background: rgba(158, 204, 171, 0.5) !important;  }    /* 夜间模式下的阅读模式 */  [data-theme="dark"] .read-mode #aside-content .card-widget {    background: rgba(25, 25, 25, 0.9) !important;    color: #ffffff;  }  [data-theme="dark"] .read-mode div#post {    background: rgba(25, 25, 25, 0.9) !important;    color: #ffffff;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/title.js"/>
      <url>/js/title.js</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = '你为什么要跑啊——';    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = '欢迎回来~';    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/static/css/gitcalendar.css"/>
      <url>/static/css/gitcalendar.css</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>#git_container {  text-align: center;  margin: 0 auto;  width: 100%;  display: flex;  display: -webkit-flex;  justify-content: center;  align-items: center;  flex-wrap: wrap;}.gitcalendar-graph text.wday, .gitcalendar-graph text.month {  font-size: 10px;  fill: #aaa;}.contrib-legend {  text-align: right;  padding: 0 14px 10px 0;  display: inline-block;  float: right;}.contrib-legend .legend {  display: inline-block;  list-style: none;  margin: 0 5px;  position: relative;  bottom: -1px;  padding: 0;}.contrib-legend .legend li {  display: inline-block;  width: 10px;  height: 10px;}.text-small {  font-size: 12px;  color: #767676;}.gitcalendar-graph {  padding: 15px 0 0;  text-align: center;}.contrib-column {  text-align: center;  border-left: 1px solid #ddd;  border-top: 1px solid #ddd;  font-size: 11px;}.contrib-column-first {  border-left: 0;}.table-column {  padding: 10px;  display: table-cell;  flex: 1;  vertical-align: top;}.contrib-number {  font-weight: 300;  line-height: 1.3em;  font-size: 24px;  display: block;}.gitcalendar img.spinner {  width: 70px;  margin-top: 50px;  min-height: 70px;}.monospace {  text-align: center;  color: #000;  font-family: monospace;}.monospace a {  color: #1D75AB;  text-decoration: none;}.contrib-footer {  font-size: 11px;  padding: 0 10px 12px;  text-align: left;  width: 100%;  box-sizing: border-box;  height: 26px;}.left.text-muted {  float: left;  margin-left: 9px;  color: #767676;}.left.text-muted a {  color: #4078c0;  text-decoration: none;}.left.text-muted a:hover, .monospace a:hover {  text-decoration: underline;}h2.f4.text-normal.mb-3 {  display: none;}.float-left.text-gray {  float: left;}#user-activity-overview {  display: none;}.day-tooltip {  white-space: nowrap;  position: absolute;  z-index: 99999;  padding: 10px;  font-size: 12px;  color: #959da5;  text-align: center;  background: rgba(0, 0, 0, .85);  border-radius: 3px;  display: none;  pointer-events: none;}.day-tooltip strong {  color: #dfe2e5;}.day-tooltip.is-visible {  display: block;}.day-tooltip:after {  position: absolute;  bottom: -10px;  left: 50%;  width: 5px;  height: 5px;  box-sizing: border-box;  margin: 0 0 0 -5px;  content: " ";  border: 5px solid transparent;  border-top-color: rgba(0, 0, 0, .85)}.position-relative {  width: 100%;}@media screen and (max-width:650px) {  .contrib-column {    display: none  }}.angle-wrapper {  z-index: 9999;  display: inline;  width: 200px;  height: 40px;  position: relative;  padding: 5px 0;  background: rgba(0, 0, 0, 0.8);  border-radius: 8px;  text-align: center;  color: white;}.angle-box {  position: fixed;  padding: 10px}.angle-wrapper span {  padding-bottom: 1em;}.angle-wrapper:before {  content: "";  width: 0;  height: 0;  border: 10px solid transparent;  border-top-color: rgba(0, 0, 0, 0.8);  position: absolute;  left: 47.5%;  top: 100%;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/static/js/gitcalendar.js"/>
      <url>/static/js/gitcalendar.js</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>function GitCalendarInit(git_gitapiurl, git_color, git_user) {  if (document.getElementById('git_container')) {    var git_canlendar = (git_user, git_gitapiurl, git_color) => {      var git_fixed = 'fixed';      var git_px = 'px';      var git_month = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'];      var git_monthchange = [];      var git_oneyearbeforeday = '';      var git_thisday = '';      var git_amonthago = '';      var git_aweekago = '';      var git_weekdatacore = 0;      var git_datacore = 0;      var git_total = 0;      var git_datadate = '';      var git_git_data = [];      var git_positionplusdata = [];      var git_firstweek = [];      var git_lastweek = [];      var git_beforeweek = [];      var git_thisweekdatacore = 0;      var git_mounthbeforeday = 0;      var git_mounthfirstindex = 0;      var git_crispedges = 'crispedges';      var git_thisdayindex = 0;      var git_amonthagoindex = 0;      var git_amonthagoweek = [];      var git_firstdate = [];      var git_first2date = [];      var git_montharrbefore = [];      var git_monthindex = 0;      var retinaCanvas = (canvas, context, ratio) => {        if (ratio > 1) {          var canvasWidth = canvas.width;          var canvasHeight = canvas.height;          canvas.width = canvasWidth * ratio;          canvas.height = canvasHeight * ratio;          canvas.style.width = '100%';          canvas.style.height = canvasHeight + 'px';          context.scale(ratio, ratio);        }      }      var responsiveChart = () => {        if (document.getElementById("gitcanvas")) {          var git_tooltip_container = document.getElementById('git_tooltip_container');          var ratio = window.devicePixelRatio || 1          var git_x = '';          var git_y = '';          var git_span1 = '';          var git_span2 = '';          var git_calendar_c = document.getElementById("gitcanvas");          git_calendar_c.style.width = '100%';          git_calendar_c.style.height = '';          var cmessage = document.getElementById("gitmessage");          var git_calendar_ctx = git_calendar_c.getContext("2d");          width = git_calendar_c.width = document.getElementById("gitcalendarcanvasbox").offsetWidth;          height = git_calendar_c.height = 9 * 0.96 * git_calendar_c.width / git_data.length;          retinaCanvas(git_calendar_c, git_calendar_ctx, ratio)          var linemaxwitdh = height / 9;          var lineminwitdh = 0.8 * linemaxwitdh;          var setposition = {            x: 0.02 * width,            y: 0.025 * width          };          for (var week in git_data) {            weekdata = git_data[week];            for (var day in weekdata) {              var dataitem = {                date: "",                count: "",                x: 0,                y: 0              };              git_positionplusdata.push(dataitem);              git_calendar_ctx.fillStyle = git_thiscolor(git_color, weekdata[day].count);              setposition.y = Math.round(setposition.y * 100) / 100;              dataitem.date = weekdata[day].date;              dataitem.count = weekdata[day].count;              dataitem.x = setposition.x;              dataitem.y = setposition.y;              git_calendar_ctx.fillRect(setposition.x, setposition.y, lineminwitdh, lineminwitdh);              setposition.y = setposition.y + linemaxwitdh            }            setposition.y = 0.025 * width;            setposition.x = setposition.x + linemaxwitdh;          }          if (document.body.clientWidth > 700) {            git_calendar_ctx.font = "600  Arial";            git_calendar_ctx.fillStyle = '#aaa';            git_calendar_ctx.fillText("日", 0, 1.9 * linemaxwitdh);            git_calendar_ctx.fillText("二", 0, 3.9 * linemaxwitdh);            git_calendar_ctx.fillText("四", 0, 5.9 * linemaxwitdh);            git_calendar_ctx.fillText("六", 0, 7.9 * linemaxwitdh);            var monthindexlist = git_calendar_c.width / 24;            for (var index in git_monthchange) {              git_calendar_ctx.fillText(git_monthchange[index], monthindexlist, 0.7 * linemaxwitdh);              monthindexlist = monthindexlist + git_calendar_c.width / 12            }          }          git_calendar_c.onmousemove = function(event) {            if (document.querySelector('.gitmessage')) {              git_tooltip_container.innerHTML = ""            }            getMousePos(git_calendar_c, event)          };          git_tooltip_container.onmousemove = function(event) {            if (document.querySelector('.gitmessage')) {              git_tooltip_container.innerHTML = ""            }          };          var getMousePos = (canvas, event) => {            var rect = canvas.getBoundingClientRect();            var x = event.clientX - rect.left * (canvas.width / rect.width);            var y = event.clientY - rect.top * (canvas.height / rect.height);            for (var item of git_positionplusdata) {              var lenthx = x - item.x;              var lenthy = y - item.y;              if (0 < lenthx && lenthx < lineminwitdh) {                if (0 < lenthy && lenthy < lineminwitdh) {                  git_span1 = item.date;                  git_span2 = item.count;                  git_x = event.clientX - 100;                  git_y = event.clientY - 60;                  html = tooltip_html(git_x, git_y, git_span1, git_span2);                  append_div_gitcalendar(git_tooltip_container, html)                }              }            }          }        }      }      var addlastmonth = () => {        if (git_thisdayindex === 0) {          thisweekcore(52);          thisweekcore(51);          thisweekcore(50);          thisweekcore(49);          thisweekcore(48);          git_thisweekdatacore += git_firstdate[6].count;          git_amonthago = git_firstdate[6].date        } else {          thisweekcore(52);          thisweekcore(51);          thisweekcore(50);          thisweekcore(49);          thisweek2core();          git_amonthago = git_first2date[git_thisdayindex - 1].date        }      }      var thisweek2core = () => {        for (var i = git_thisdayindex - 1; i < git_first2date.length; i++) {          git_thisweekdatacore += git_first2date[i].count        }      }      var thisweekcore = (index) => {        for (var item of git_data[index]) {          git_thisweekdatacore += item.count        }      }      var addlastweek = () => {        for (var item of git_lastweek) {          git_weekdatacore += item.count        }      }      var addbeforeweek = () => {        for (var i = git_thisdayindex; i < git_beforeweek.length; i++) {          git_weekdatacore += git_beforeweek[i].count        }      }      var addweek = (data) => {        if (git_thisdayindex === 6) {          git_aweekago = git_lastweek[0].date;          addlastweek()        } else {          lastweek = data.contributions[51];          git_aweekago = lastweek[git_thisdayindex + 1].date;          addlastweek();          addbeforeweek()        }      }      fetch(git_gitapiurl).then(data => data.json()).then(data => {        if (document.getElementById('git_loading')) {          document.getElementById('git_loading').remove()        };        git_data = data.contributions;        git_total = data.total;        git_first2date = git_data[48];        git_firstdate = git_data[47];        git_firstweek = data.contributions[0];        git_lastweek = data.contributions[52];        git_beforeweek = data.contributions[51];        git_thisdayindex = git_lastweek.length - 1;        git_thisday = git_lastweek[git_thisdayindex].date;        git_oneyearbeforeday = git_firstweek[0].date;        git_monthindex = git_thisday.substring(5, 7) * 1;        git_montharrbefore = git_month.splice(git_monthindex, 12 - git_monthindex);        git_monthchange = git_montharrbefore.concat(git_month);        addweek(data);        addlastmonth();        var html = git_main_box(git_monthchange, git_data, git_user, git_color, git_total, git_thisweekdatacore, git_weekdatacore, git_oneyearbeforeday, git_thisday, git_aweekago, git_amonthago);        append_div_gitcalendar(git_container, html);        responsiveChart()      }).catch(function(error) {        console.log(error)      });      window.onresize = function() {        responsiveChart()      };      window.onscroll = function() {        if (document.querySelector('.gitmessage')) {          git_tooltip_container.innerHTML = ""        }      };      var git_thiscolor = (color, x) => {        if (x === 0) {          var i = parseInt(x / 2);          return color[0]        } else if (x < 2) {          return color[1]        } else if (x < 20) {          var i = parseInt(x / 2);          return color[i]        } else {          return color[9]        }      };      var tooltip_html = (x, y, span1, span2) => {        var html = '';        html += `<div class="gitmessage" style="top:${y}px;left: ${x}px;position: fixed;z-index:9999">                          <div class="angle-wrapper" style="display:block;">                            <span>${span1}&nbsp;</span>                            <span>${span2}次上传</span>                          </div>                        </div>`;        return html      };      var git_canvas_box = () => {        var html = `<div id="gitcalendarcanvasbox">                              <canvas id="gitcanvas" style="animation: none;">                              </canvas>                            </div>`;        return html      };      var git_info_box = (user, color) => {        var html = '';        html += `<div id="git_tooltip_container"></div>                        <div class="contrib-footer clearfix mt-1 mx-3 px-3 pb-1">                          <div class="float-left text-gray">数据来源                            <a href="https://github.com/${user}" target="blank">@${user}</a>                          </div>                          <div class="contrib-legend text-gray">Less                            <ul class="legend">                            <li style="background-color:${color[0]}"></li>                            <li style="background-color:${color[2]}"></li>                            <li style="background-color:${color[4]}"></li>                            <li style="background-color:${color[6]}"></li>                            <li style="background-color:${color[8]}"></li>                            </ul>More                          </div>                        </div>`;        return html      };      var git_main_box = (monthchange, git_data, user, color, total, thisweekdatacore, weekdatacore, oneyearbeforeday, thisday, aweekago, amonthago) => {        var html = '';        var canvasbox = git_canvas_box();        var infobox = git_info_box(user, color);        html += `<div class="position-relative">                          <div class="border py-2 graph-before-activity-overview">                            <div class="js-gitcalendar-graph mx-md-2 mx-3 d-flex flex-column flex-items-end flex-xl-items-center overflow-hidden pt-1 is-graph-loading graph-canvas gitcalendar-graph height-full text-center">                              ${canvasbox}                            </div>                            ${infobox}                          </div>                        </div>`;        html += `<div style="display:flex;width:100%">                          <div class="contrib-column contrib-column-first table-column">                            <span class="text-muted">过去一年提交</span>                            <span class="contrib-number">${total}</span>                            <span class="text-muted">${oneyearbeforeday}&nbsp;-&nbsp;${thisday}</span>                          </div>                          <div class="contrib-column table-column">                            <span class="text-muted">最近一月提交</span>                            <span class="contrib-number">${thisweekdatacore}</span>                            <span class="text-muted">${amonthago}&nbsp;-&nbsp;${thisday}</span>                          </div>                          <div class="contrib-column table-column">                            <span class="text-muted">最近一周提交</span>                            <span class="contrib-number">${weekdatacore}</span>                            <span class="text-muted">${aweekago}&nbsp;-&nbsp;${thisday}</span>                          </div>                        </div>`;        return html      };    };    var append_div_gitcalendar = (parent, text) => {      if (typeof text === 'string') {        var temp = document.createElement('div');        temp.innerHTML = text;        var frag = document.createDocumentFragment();        while (temp.firstChild) {          frag.appendChild(temp.firstChild)        }        parent.appendChild(frag)      } else {        parent.appendChild(text)      }    };    var git_container = document.getElementById('git_container');    var git_loading = document.getElementById('git_loading');    git_canlendar(git_user, git_gitapiurl, git_color)  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/static/js/runtime.js"/>
      <url>/static/js/runtime.js</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>var now=new Date;function createtime(){now.setTime(now.getTime()+1e3);var e=new Date("08/01/2022 00:00:00"),t=Math.trunc(234e8+(now-e)/1e3*17),a=(t/1496e5).toFixed(6),o=new Date("08/09/2022 00:00:00"),n=(now-o)/1e3/60/60/24,r=Math.floor(n),i=(now-o)/1e3/60/60-24*r,s=Math.floor(i);1==String(s).length&&(s="0"+s);var d=(now-o)/1e3/60-1440*r-60*s,l=Math.floor(d);1==String(l).length&&(l="0"+l);var g=(now-o)/1e3-86400*r-3600*s-60*l,b=Math.round(g);1==String(b).length&&(b="0"+b);let c="";c=s<18&&s>=9?`<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-科研摸鱼中.svg' title='什么时候能够实现财富自由呀~'><br> <div style="font-size:13px;font-weight:bold">本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</div>`:`<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-下班休息啦.svg' title='下班了就该开开心心地玩耍~'><br> <div style="font-size:13px;font-weight:bold">本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</div>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=c)}setInterval((()=>{createtime()}),1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/static/js/sakura.js"/>
      <url>/static/js/sakura.js</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>var stop, staticx;var img = new Image();// 将引入的图片文件替换为你想要的即可img.src = "https://img.cdn.nesxc.com/upload/wordpress/202202251325420.webp";function Sakura(x, y, s, r, fn) {    this.x = x;    this.y = y;    this.s = s;    this.r = r;    this.fn = fn}Sakura.prototype.draw = function (cxt) {    cxt.save();    var xc = 20 * this.s / 2;    cxt.translate(this.x, this.y);    cxt.rotate(this.r);    cxt.drawImage(img, 0, 0, 20 * this.s, 20 * this.s);    cxt.restore()};Sakura.prototype.update = function () {    this.x = this.fn.x(this.x, this.y);    this.y = this.fn.y(this.y, this.y);    this.r = this.fn.r(this.r);    if (this.x > window.innerWidth || this.x < 0 || this.y > window.innerHeight || this.y < 0) {        this.r = getRandom("fnr");        if (Math.random() > 0.4) {            this.x = getRandom("x");            this.y = 0;            this.s = getRandom("s");            this.r = getRandom("r")        } else {            this.x = window.innerWidth;            this.y = getRandom("y");            this.s = getRandom("s");            this.r = getRandom("r")        }    }};SakuraList = function () {    this.list = []};SakuraList.prototype.push = function (sakura) {    this.list.push(sakura)};SakuraList.prototype.update = function () {    for (var i = 0, len = this.list.length; i < len; i++) {        this.list[i].update()    }};SakuraList.prototype.draw = function (cxt) {    for (var i = 0, len = this.list.length; i < len; i++) {        this.list[i].draw(cxt)    }};SakuraList.prototype.get = function (i) {    return this.list[i]};SakuraList.prototype.size = function () {    return this.list.length};function getRandom(option) {    var ret, random;    switch (option) {        case "x":            ret = Math.random() * window.innerWidth;            break;        case "y":            ret = Math.random() * window.innerHeight;            break;        case "s":            ret = Math.random();            break;        case "r":            ret = Math.random() * 4;            break;        case "fnx":            random = -0.5 + Math.random() * 1;            ret = function (x, y) {                return x + 0.5 * random - 1.7            };            break;        case "fny":            random = 1.5 + Math.random() * 0.7;            ret = function (x, y) {                return y + random            };            break;        case "fnr":            random = Math.random() * 0.03;            ret = function (r) {                return r + random            };            break    }    return ret}function startSakura() {    requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;    var canvas = document.createElement("canvas"),        cxt;    staticx = true;    canvas.height = window.innerHeight;    canvas.width = window.innerWidth;    canvas.setAttribute("style", "position: fixed;left: 0;top: 0;pointer-events: none;");    canvas.setAttribute("id", "canvas_sakura");    document.getElementsByTagName("body")[0].appendChild(canvas);    cxt = canvas.getContext("2d");    var sakuraList = new SakuraList();    for (var i = 0; i < 50; i++) {        var sakura, randomX, randomY, randomS, randomR, randomFnx, randomFny;        randomX = getRandom("x");        randomY = getRandom("y");        randomR = getRandom("r");        randomS = getRandom("s");        randomFnx = getRandom("fnx");        randomFny = getRandom("fny");        randomFnR = getRandom("fnr");        sakura = new Sakura(randomX, randomY, randomS, randomR, {            x: randomFnx,            y: randomFny,            r: randomFnR        });        sakura.draw(cxt);        sakuraList.push(sakura)    }    stop = requestAnimationFrame(function () {        cxt.clearRect(0, 0, canvas.width, canvas.height);        sakuraList.update();        sakuraList.draw(cxt);        stop = requestAnimationFrame(arguments.callee)    })}window.onresize = function () {    var canvasSnow = document.getElementById("canvas_snow")};img.onload = function () {    startSakura()};function stopp() {    if (staticx) {        var child = document.getElementById("canvas_sakura");        child.parentNode.removeChild(child);        window.cancelAnimationFrame(stop);        staticx = false    } else {        startSakura()    }};]]></content>
      
    </entry>
    
    
  
</search>
